{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class PortfolioStateService {\n  constructor() {\n    this.portfolioSubject = new Subject();\n  }\n  sendPropertyToReview(index) {\n    this.portfolioSubject.next(index - 1);\n  }\n}\nPortfolioStateService.ɵfac = function PortfolioStateService_Factory(t) {\n  return new (t || PortfolioStateService)();\n};\nPortfolioStateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PortfolioStateService,\n  factory: PortfolioStateService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAI9B,OAAM,MAAOC,qBAAqB;EAEjCC;IADO,qBAAgB,GAAG,IAAIF,OAAO,EAAU;EAChC;EAEfG,oBAAoB,CAACC,KAAa;IACjC,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAACF,KAAK,GAAG,CAAC,CAAC;EACtC;;AANYH,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAM,SAArBN,qBAAqB;EAAAO,YAFrB;AAAM","names":["Subject","PortfolioStateService","constructor","sendPropertyToReview","index","portfolioSubject","next","factory","providedIn"],"sourceRoot":"","sources":["/home/teknikashi/Radix/angular/platform/src/app/services/state/portfolio-state.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class PortfolioStateService {\n\tpublic portfolioSubject = new Subject<string>();\n\tconstructor() {}\n\n\tsendPropertyToReview(index: number) {\n\t\tthis.portfolioSubject.next(index - 1);\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}