{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class SidebarService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrlSB = 'http://localhost:6001/SideBarProperties';\n  }\n  getSideBarProperties() {\n    return this.http.get(this.apiUrl);\n  }\n  getToolTipProperties() {\n    return this.http.get(this.apiUrl);\n  }\n}\nSidebarService.ɵfac = function SidebarService_Factory(t) {\n  return new (t || SidebarService)(i0.ɵɵinject(i1.HttpClient));\n};\nSidebarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SidebarService,\n  factory: SidebarService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,WAAW,GAAG;EACnBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACxB,cAAc,EAAE;GAChB;CACD;AAID,OAAM,MAAOG,cAAc;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,aAAQ,GAAG,yCAAyC;EAErB;EAEvCC,oBAAoB;IACnB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAsB,IAAI,CAACC,MAAM,CAAC;EACvD;EAGAC,oBAAoB;IACnB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAsB,IAAI,CAACC,MAAM,CAAC;EACvD;;AAZYL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAO,SAAdP,cAAc;EAAAQ,YAFd;AAAM","names":["HttpHeaders","httpOptions","headers","SidebarService","constructor","http","getSideBarProperties","get","apiUrl","getToolTipProperties","factory","providedIn"],"sourceRoot":"","sources":["/home/teknikashi/Radix/angular/platform/src/app/services/sidebar.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable, of } from 'rxjs';\nimport { SideBarProperties } from '../SideBarProperties';\nimport { ToolTipProperties } from '../ToolTipProperties';\nconst httpOptions = {\n\theaders: new HttpHeaders({\n\t\t'Content-Type': 'application/json',\n\t}),\n};\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class SidebarService {\n\tprivate apiUrlSB = 'http://localhost:6001/SideBarProperties';\n\tprivate apiUrl\n\tconstructor(private http: HttpClient) {}\n\n\tgetSideBarProperties(): Observable<SideBarProperties[]> {\n\t\treturn this.http.get<SideBarProperties[]>(this.apiUrl);\n\t}\n\n\n\tgetToolTipProperties(): Observable<ToolTipProperties[]> { \n\t\treturn this.http.get<ToolTipProperties[]>(this.apiUrl)\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}