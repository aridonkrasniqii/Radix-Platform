{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SidebarPropertiesComponent = class SidebarPropertiesComponent {\n  constructor(sideBarService, toolTipService) {\n    this.sideBarService = sideBarService;\n    this.toolTipService = toolTipService;\n    this.hidden = true;\n    this.sideBarProperties = [];\n    this.toolTipProperties = [];\n    this.toolTipIndex = 0;\n  }\n  ngOnInit() {\n    this.sideBarService.getSideBarProperties().subscribe(properties => this.sideBarProperties = properties);\n    this.toolTipService.getToolTipProperties().subscribe(properties => {\n      this.toolTipProperties = properties;\n    });\n  }\n  onRegionClick(property) {}\n  showToolTip(property) {\n    this.toolTipIndex = property.id - 1;\n    this.hidden = !this.hidden;\n  }\n};\nSidebarPropertiesComponent = __decorate([Component({\n  selector: 'app-sidebar-properties',\n  templateUrl: './sidebar-properties.component.html',\n  styleUrls: ['./sidebar-properties.component.css']\n})], SidebarPropertiesComponent);\nexport { SidebarPropertiesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAKtCC,YACSC,cAA8B,EAC9BC,cAA8B;IAD9B,mBAAc,GAAdD,cAAc;IACd,mBAAc,GAAdC,cAAc;IANvB,WAAM,GAAG,IAAI;IACb,sBAAiB,GAAwB,EAAE;IAC3C,sBAAiB,GAAwB,EAAE;IAC3C,iBAAY,GAAG,CAAC;EAIb;EACHC,QAAQ;IACP,IAAI,CAACF,cAAc,CACjBG,oBAAoB,EAAE,CACtBC,SAAS,CACRC,UAA+B,IAC9B,IAAI,CAACC,iBAAiB,GAAGD,UAAkC,CAC7D;IACF,IAAI,CAACJ,cAAc,CACjBM,oBAAoB,EAAE,CACtBH,SAAS,CAAEC,UAA+B,IAAI;MAC9C,IAAI,CAACG,iBAAiB,GAAGH,UAAiC;IAC3D,CAAC,CAAC;EACJ;EAEAI,aAAa,CAACC,QAAa,GAAG;EAE9BC,WAAW,CAACD,QAAa;IACxB,IAAI,CAACE,YAAY,GAAGF,QAAQ,CAACG,EAAE,GAAG,CAAC;IACnC,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;EAC3B;CACA;AA7BYhB,0BAA0B,eALtCD,SAAS,CAAC;EACVkB,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CAChD,CAAC,GACWnB,0BAA0B,CA6BtC;SA7BYA,0BAA0B","names":["Component","SidebarPropertiesComponent","constructor","sideBarService","toolTipService","ngOnInit","getSideBarProperties","subscribe","properties","sideBarProperties","getToolTipProperties","toolTipProperties","onRegionClick","property","showToolTip","toolTipIndex","id","hidden","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/teknikashi/Radix/angular/platform/src/app/components/sidebar/sidebar-properties/sidebar-properties.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { SideBarProperties } from 'src/app/SideBarProperties';\nimport { ToolTipProperties } from 'src/app/ToolTipProperties';\n\n@Component({\n\tselector: 'app-sidebar-properties',\n\ttemplateUrl: './sidebar-properties.component.html',\n\tstyleUrls: ['./sidebar-properties.component.css'],\n})\nexport class SidebarPropertiesComponent {\n\thidden = true;\n\tsideBarProperties: SideBarProperties[] = [];\n\ttoolTipProperties: ToolTipProperties[] = [];\n\ttoolTipIndex = 0;\n\tconstructor(\n\t\tprivate sideBarService: SidebarService,\n\t\tprivate toolTipService: SidebarService\n\t) {}\n\tngOnInit() {\n\t\tthis.sideBarService\n\t\t\t.getSideBarProperties()\n\t\t\t.subscribe(\n\t\t\t\t(properties: SideBarProperties[]) =>\n\t\t\t\t\t(this.sideBarProperties = properties as SideBarProperties[])\n\t\t\t);\n\t\tthis.toolTipService\n\t\t\t.getToolTipProperties()\n\t\t\t.subscribe((properties: ToolTipProperties[]) => {\n\t\t\t\tthis.toolTipProperties = properties as ToolTipProperties[];\n\t\t\t});\n\t}\n\n\tonRegionClick(property: any) {}\n\n\tshowToolTip(property: any) {\n\t\tthis.toolTipIndex = property.id - 1;\n\t\tthis.hidden = !this.hidden;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}